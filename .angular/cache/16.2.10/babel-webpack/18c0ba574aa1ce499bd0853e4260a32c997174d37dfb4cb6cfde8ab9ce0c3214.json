{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../../../services/storage.service\";\nexport class StateManagerService {\n  constructor(storageService) {\n    this.storageService = storageService;\n    this.state = new BehaviorSubject(null);\n    this.stateKey = 'onboarding-state';\n  }\n  getData() {\n    const storageData = this.storageService.get(this.stateKey);\n    if (storageData) {\n      this.state.next(JSON.parse(storageData));\n    }\n    return this.state;\n  }\n  setData(key, data) {\n    const updatedData = {\n      ...this.state.value,\n      [key]: data\n    };\n    this.storageService.set(this.stateKey, JSON.stringify(updatedData));\n    this.state.next(updatedData);\n  }\n  static #_ = this.ɵfac = function StateManagerService_Factory(t) {\n    return new (t || StateManagerService)(i0.ɵɵinject(i1.StorageService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StateManagerService,\n    factory: StateManagerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}