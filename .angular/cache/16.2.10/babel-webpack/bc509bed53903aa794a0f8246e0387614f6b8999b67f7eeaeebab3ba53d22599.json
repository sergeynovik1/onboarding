{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StateManagerService } from '../../services/state-managment/state-manager.service';\nexport const ROUTE_STEPS = {\n  'create-account-auto': {\n    route: '/register/create-account/auto',\n    guard: () => true\n  },\n  'create-account-manually': {\n    route: '/register/create-account/manually',\n    guard: () => true\n  },\n  'wait-smfa-confirmation': {\n    route: '/register/link-verification/sent',\n    guard: () => {\n      const state = inject(StateManagerService).getData().value;\n      return state?.smfaVerification && (state.smfaVerification.resendCount === 0 || state.smfaVerification.resendCount === 1 && state.smfaVerification.expire && Math.floor(state.smfaVerification.expire - Date.now()) > 0) ? true : (inject(Router).navigate(['register']), false);\n    }\n  },\n  'smfa-success': {\n    route: '/register/link-verification/success',\n    guard: () => {\n      const state = inject(StateManagerService).getData().value;\n      return !!state?.smfaVerification?.verified ? !!state?.smfaVerification?.verified : (inject(Router).navigate(['register']), false);\n    }\n  },\n  'personal-details': {\n    route: '/register/info/check',\n    guard: () => {\n      const state = inject(StateManagerService).getData().value;\n      return !!state?.smfaVerification?.verified && state.user ? true : (inject(Router).navigate(['/register/link-verification/ ']), false);\n    }\n  },\n  identity: {\n    route: '/register/verification',\n    guard: () => {\n      const state = inject(StateManagerService).getData().value;\n      return !!state?.smfaVerification?.verified && state.user ? true : (inject(Router).navigate(['/register/link-verification/ ']), false);\n    }\n  },\n  'identity-id': {\n    route: '/register/verification/id',\n    guard: () => {\n      const state = inject(StateManagerService).getData().value;\n      return !!state?.smfaVerification?.verified && state.user ? true : (inject(Router).navigate(['/register/link-verification/ ']), false);\n    }\n  },\n  'identity-passport': {\n    route: '/register/verification/passport',\n    guard: () => {\n      const state = inject(StateManagerService).getData().value;\n      return !!state?.smfaVerification?.verified && state.user ? true : (inject(Router).navigate(['/register/link-verification/ ']), false);\n    }\n  },\n  'rent-reporting': {\n    route: '/register/rent-reporting',\n    guard: () => {\n      const state = inject(StateManagerService).getData().value;\n      return !!state?.user?.isDocumentUpload ? true : (inject(Router).navigate(['/register/verification/']), false);\n    }\n  },\n  payment: {\n    route: '/register/payment',\n    guard: () => true\n  },\n  'landlord-details': {\n    route: '/register/landlord',\n    guard: () => true\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}