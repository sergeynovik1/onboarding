{"ast":null,"code":"import { tap } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../../../services/cookies.service\";\nimport * as i3 from \"./state-managment/state-manager.service\";\nimport * as i4 from \"src/app/services/storage.service\";\nexport class LandlordService {\n  constructor(httpClient, cookiesService, stateManagerService, storageService) {\n    this.httpClient = httpClient;\n    this.cookiesService = cookiesService;\n    this.stateManagerService = stateManagerService;\n    this.storageService = storageService;\n    this.apiUrl = environment.apiUrl;\n  }\n  sendLandlordInfo(payload) {\n    return this.httpClient.post(`${this.apiUrl}/landlord`, payload).pipe(tap(res => {\n      const tokens = this.storageService.getTokens();\n      this.cookiesService.setCookie('tokens', JSON.stringify(tokens));\n    }), tap(res => {\n      const user = this.stateManagerService.getData().value?.user;\n      this.cookiesService.setCookie('user', JSON.stringify(user));\n    }));\n  }\n  static #_ = this.ɵfac = function LandlordService_Factory(t) {\n    return new (t || LandlordService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookiesService), i0.ɵɵinject(i3.StateManagerService), i0.ɵɵinject(i4.StorageService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LandlordService,\n    factory: LandlordService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}