{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { SelectOptionComponent } from '../select-option/select-option.component';\nimport { FormsModule, NG_VALIDATORS, NG_VALUE_ACCESSOR, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/cdk/scrolling\";\nconst _c0 = [\"options\", \"\"];\nconst _c1 = function (a0, a1, a2) {\n  return {\n    disabled: a0,\n    error: a1,\n    visible: a2\n  };\n};\nfunction SelectInputComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"input\", 7);\n    i0.ɵɵelementStart(2, \"input\", 8);\n    i0.ɵɵlistener(\"focus\", function SelectInputComponent_div_3_Template_input_focus_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      ctx_r2.isBackdropVisible = true;\n      return i0.ɵɵresetView(ctx_r2.form.controls[\"option\"].markAsTouched());\n    })(\"input\", function SelectInputComponent_div_3_Template_input_input_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.form.controls[\"option\"].markAsDirty());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-icon\", 9);\n    i0.ɵɵlistener(\"click\", function SelectInputComponent_div_3_Template_mat_icon_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.isBackdropVisible = !ctx_r5.isBackdropVisible);\n    });\n    i0.ɵɵtext(4, \"keyboard_arrow_down\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(3, _c1, ctx_r0.form.controls[\"option\"].disabled, ctx_r0.form.controls[\"option\"].touched && ctx_r0.form.controls[\"option\"].dirty && !!ctx_r0.form.controls[\"option\"].errors, ctx_r0.isBackdropVisible))(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r0.form.controls[\"option\"].value);\n  }\n}\nfunction SelectInputComponent_app_select_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-select-option\", 9);\n    i0.ɵɵlistener(\"click\", function SelectInputComponent_app_select_option_7_Template_app_select_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const option_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      ctx_r7.onOptionSelect(option_r6);\n      return i0.ɵɵresetView(ctx_r7.isBackdropVisible = false);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r6);\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    visible: a0\n  };\n};\nconst _c3 = [\"*\"];\nexport class SelectInputComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n  }\n  ngOnInit() {\n    this.isBackdropVisible = false;\n    this.form = this.fb.group({\n      option: ['', [Validators.required]]\n    });\n    this.subscription = new Subscription();\n  }\n  onOptionSelect(option) {\n    this.form?.setValue({\n      option\n    }, {\n      emitEvent: true\n    });\n  }\n  writeValue(option) {\n    option && this.form && this.form.setValue({\n      option\n    }, {\n      emitEvent: false\n    });\n  }\n  registerOnChange(fn) {\n    this.subscription?.add(this.form?.controls['option'].valueChanges.subscribe(fn));\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate() {\n    return this.form?.controls['option'].errors;\n  }\n  setDisabledState(isDisabled) {\n    isDisabled ? this.form?.controls['option'].disable({\n      emitEvent: false\n    }) : this.form?.controls['option'].enable({\n      emitEvent: false\n    });\n  }\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n  static #_ = this.ɵfac = function SelectInputComponent_Factory(t) {\n    return new (t || SelectInputComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectInputComponent,\n    selectors: [[\"app-select-input\", \"options\", \"\"]],\n    inputs: {\n      options: \"options\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: SelectInputComponent,\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: SelectInputComponent,\n      multi: true\n    }]), i0.ɵɵStandaloneFeature],\n    attrs: _c0,\n    ngContentSelectors: _c3,\n    decls: 8,\n    vars: 9,\n    consts: [[1, \"wrapper\"], [\"class\", \"input-wrapper\", 3, \"ngClass\", \"formGroup\", 4, \"ngIf\"], [1, \"backdrop\", 3, \"ngClass\", \"click\"], [1, \"backdrop-list-wrapper\", 3, \"ngClass\"], [\"itemSize\", \"40\", 1, \"virtual-scroll\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-wrapper\", 3, \"ngClass\", \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"option\", 2, \"display\", \"none\"], [\"readonly\", \"\", \"type\", \"text\", \"placeholder\", \"Select landlord type\", 1, \"input\", 3, \"value\", \"focus\", \"input\"], [3, \"click\"]],\n    template: function SelectInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"span\");\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, SelectInputComponent_div_3_Template, 5, 7, \"div\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵlistener(\"click\", function SelectInputComponent_Template_div_click_4_listener() {\n          return ctx.isBackdropVisible = !ctx.isBackdropVisible;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"cdk-virtual-scroll-viewport\", 4);\n        i0.ɵɵtemplate(7, SelectInputComponent_app_select_option_7_Template, 2, 1, \"app-select-option\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c2, ctx.isBackdropVisible));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c2, ctx.isBackdropVisible))(\"@expandAnimation\", ctx.isBackdropVisible ? \"expanded\" : \"collapsed\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, MatIconModule, i3.MatIcon, ScrollingModule, i4.CdkFixedSizeVirtualScroll, i4.CdkVirtualScrollViewport, SelectOptionComponent, FormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".wrapper[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  position: relative;\\n}\\n.wrapper[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 20px;\\n  letter-spacing: 0.3px;\\n  color: #717575;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n  border: 1px solid #ced1d1;\\n  display: grid;\\n  grid: 48px/1fr 20px;\\n  overflow: hidden;\\n  align-items: center;\\n  padding-right: 20px;\\n  z-index: 4;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%] {\\n  border: 0;\\n  outline: 0;\\n  padding-left: 20px;\\n  padding-top: 14px;\\n  padding-bottom: 14px;\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 20px;\\n  letter-spacing: 0.2px;\\n  color: #131414;\\n  cursor: pointer;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]::placeholder {\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 20px;\\n  letter-spacing: 0.2px;\\n  color: #939696;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\\n  color: #717575;\\n  cursor: pointer;\\n  transition: 150ms;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper.visible[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\\n  transform: rotate(180deg);\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]:focus-within {\\n  box-shadow: 0px 0px 0px 3px #caedc9;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]:not(:focus-within).error {\\n  border: 1px solid #ed4b34;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]:not(.error):hover {\\n  border: 1px solid #717575;\\n}\\n.wrapper[_ngcontent-%COMP%]   .backdrop[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  background-color: #353535;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 3;\\n  opacity: 0;\\n  display: none;\\n}\\n.wrapper[_ngcontent-%COMP%]   .backdrop.visible[_ngcontent-%COMP%] {\\n  display: block;\\n}\\n.wrapper[_ngcontent-%COMP%]   .backdrop-list-wrapper[_ngcontent-%COMP%] {\\n  top: 83px;\\n  left: 0;\\n  width: 100%;\\n  max-height: 200px;\\n  border-radius: 12px;\\n  background: #ffffff;\\n  z-index: 4;\\n  position: absolute;\\n  box-shadow: 0px 20px 35px -5px rgba(19, 20, 20, 0.1), 0px 4px 10px 0px rgba(19, 20, 20, 0.05), 0px 0px 0px 1px rgba(19, 20, 20, 0.03);\\n  padding: 4px;\\n}\\n.wrapper[_ngcontent-%COMP%]   .backdrop-list-wrapper[_ngcontent-%COMP%]   .virtual-scroll[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.wrapper[_ngcontent-%COMP%]   .backdrop-list-wrapper[_ngcontent-%COMP%]   .virtual-scroll[_ngcontent-%COMP%]   app-select-option[_ngcontent-%COMP%] {\\n  height: 40px;\\n}\"],\n    data: {\n      animation: [trigger('expandAnimation', [state('expanded', style({\n        height: '128px',\n        opacity: 1,\n        display: 'block'\n      })), state('collapsed', style({\n        height: '0',\n        opacity: 0,\n        display: 'none'\n      })), transition('expanded <=> collapsed', animate('0.15s'))])]\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}