{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { PasswordIconSvgComponent } from './components/password-icon-svg/password-icon-svg.component';\nimport { FormsModule, NG_VALIDATORS, NG_VALUE_ACCESSOR, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { uppercaseValidator } from './consts/validators/uppercase.validator';\nimport { lowercaseValidator } from './consts/validators/lowercase.validator';\nimport { numberValidator } from './consts/validators/number.validator';\nimport { specialCharacterValidator } from './consts/validators/special-character.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    active: a0\n  };\n};\nfunction PasswordInputComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9, 10)(2, \"div\", 11)(3, \"div\", 12);\n    i0.ɵɵelement(4, \"div\", 13);\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6, \"12 characters long\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 12);\n    i0.ɵɵelement(8, \"div\", 13);\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10, \"1 uppercase letter (A-Z)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 12);\n    i0.ɵɵelement(12, \"div\", 13);\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵtext(14, \"1 lowercase letter (a-z)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 12);\n    i0.ɵɵelement(16, \"div\", 13);\n    i0.ɵɵelementStart(17, \"span\");\n    i0.ɵɵtext(18, \"1 number (0-9)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 12);\n    i0.ɵɵelement(20, \"div\", 13);\n    i0.ɵɵelementStart(21, \"span\");\n    i0.ɵɵtext(22, \"1 special character (!#@$&)\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(1);\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(5);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"right\", (_r4.offsetWidth + 3) * -1 + \"px\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r2.passwordForm.controls[\"password\"].dirty && _r1.value.length >= 12));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx_r2.passwordForm.controls[\"password\"].dirty && !ctx_r2.passwordForm.controls[\"password\"].hasError(\"uppercaseError\")));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx_r2.passwordForm.controls[\"password\"].dirty && !ctx_r2.passwordForm.controls[\"password\"].hasError(\"lowercaseError\")));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx_r2.passwordForm.controls[\"password\"].dirty && !ctx_r2.passwordForm.controls[\"password\"].hasError(\"numberError\")));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx_r2.passwordForm.controls[\"password\"].dirty && !ctx_r2.passwordForm.controls[\"password\"].hasError(\"specialCharacterError\")));\n  }\n}\nfunction PasswordInputComponent_div_0_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"span\");\n    i0.ɵɵtext(2, \" Not all conditions are met\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    disabled: a0,\n    error: a1\n  };\n};\nfunction PasswordInputComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"span\");\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 2);\n    i0.ɵɵelement(4, \"input\", 3, 4);\n    i0.ɵɵelementStart(6, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function PasswordInputComponent_div_0_Template_div_click_6_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.isPasswordVisible = !ctx_r5.isPasswordVisible);\n    });\n    i0.ɵɵelement(7, \"app-password-icon-svg\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, PasswordInputComponent_div_0_div_8_Template, 23, 17, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, PasswordInputComponent_div_0_div_9_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.passwordForm)(\"ngClass\", i0.ɵɵpureFunction2(7, _c1, ctx_r0.passwordForm.controls[\"password\"].disabled, ctx_r0.passwordForm.controls[\"password\"].touched && ctx_r0.passwordForm.controls[\"password\"].dirty && !!ctx_r0.passwordForm.controls[\"password\"].errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r0.isPasswordVisible ? \"text\" : \"password\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"isVisible\", ctx_r0.isPasswordVisible)(\"color\", \"#717575\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r0.showPrompt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.controls[\"password\"].touched && ctx_r0.passwordForm.controls[\"password\"].dirty && !!ctx_r0.passwordForm.controls[\"password\"].errors);\n  }\n}\nconst _c2 = [\"*\"];\nexport class PasswordInputComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.isPasswordVisible = false;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.passwordForm = this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(12), uppercaseValidator(), lowercaseValidator(), numberValidator(), specialCharacterValidator()]]\n    });\n  }\n  writeValue(val) {\n    val && this.passwordForm && this.passwordForm.controls['password'].setValue(val, {\n      emitEvent: false\n    });\n  }\n  registerOnChange(fn) {\n    this.subscription.add(this.passwordForm?.controls['password'].valueChanges.subscribe(fn));\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    isDisabled ? this.passwordForm?.disable({\n      emitEvent: false\n    }) : this.passwordForm?.enable({\n      emitEvent: false\n    });\n  }\n  validate() {\n    return this.passwordForm?.controls['password'].errors;\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function PasswordInputComponent_Factory(t) {\n    return new (t || PasswordInputComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PasswordInputComponent,\n    selectors: [[\"app-password-input\"]],\n    inputs: {\n      showPrompt: \"showPrompt\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: PasswordInputComponent,\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: PasswordInputComponent,\n      multi: true\n    }]), i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c2,\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"wrapper\", 4, \"ngIf\"], [1, \"wrapper\"], [1, \"input-wrapper\", 3, \"formGroup\", \"ngClass\"], [\"formControlName\", \"password\", \"placeholder\", \"Enter password\", \"autocomplete\", \"123123\", 3, \"type\"], [\"input\", \"\"], [1, \"icon\", 3, \"click\"], [3, \"isVisible\", \"color\"], [\"class\", \"prompt-wrapper\", 3, \"right\", 4, \"ngIf\"], [\"class\", \"errors\", 4, \"ngIf\"], [1, \"prompt-wrapper\"], [\"wrapper\", \"\"], [1, \"prompt\"], [1, \"item\", 3, \"ngClass\"], [1, \"icon\"], [1, \"errors\"]],\n    template: function PasswordInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, PasswordInputComponent_div_0_Template, 10, 10, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordForm);\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgIf, PasswordIconSvgComponent, FormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".wrapper[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  position: relative;\\n}\\n.wrapper[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 20px;\\n  letter-spacing: 0.3px;\\n  color: #717575;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n  border: 1px solid #ced1d1;\\n  overflow: hidden;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  padding-right: 16px;\\n  margin-top: 8px;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  border: 0;\\n  outline: 0;\\n  width: 100%;\\n  padding: 14px 0 14px 20px;\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 20px;\\n  letter-spacing: 0.2px;\\n  color: #717575;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%] {\\n  width: 24px;\\n  height: 24px;\\n  cursor: pointer;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]:focus-within {\\n  box-shadow: 0px 0px 0px 3px #caedc9;\\n  border: 1px solid #1b585f;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]:focus-within   .prompt-wrapper[_ngcontent-%COMP%] {\\n  visibility: visible;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper.disabled[_ngcontent-%COMP%] {\\n  background-color: #f5f7f7;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper.error[_ngcontent-%COMP%] {\\n  border: 1px solid #ed4b34;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]:not(.error):hover {\\n  border: 1px solid #717575;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .prompt-wrapper[_ngcontent-%COMP%] {\\n  position: absolute;\\n  padding-left: 15px;\\n  z-index: 10;\\n  top: 25px;\\n  visibility: hidden;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .prompt-wrapper[_ngcontent-%COMP%]::before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: 0;\\n  top: 20%;\\n  transform: translateY(-50%);\\n  width: 20px;\\n  height: 20px;\\n  background-image: url('icon-password-prompt.svg');\\n  background-size: 100% 100%;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .prompt-wrapper[_ngcontent-%COMP%]   .prompt[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  background-color: #ffffff;\\n  border-radius: 12px;\\n  padding: 10px;\\n  box-shadow: 0px 10px 30px 0px rgba(20, 20, 20, 0.1), 0px 4px 10px 0px rgba(20, 20, 20, 0.05), 0px 0px 0px 1px rgba(20, 20, 20, 0.03);\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .prompt-wrapper[_ngcontent-%COMP%]   .prompt[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid: auto/16px 1fr;\\n  gap: 8px;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .prompt-wrapper[_ngcontent-%COMP%]   .prompt[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 16px;\\n  background: url('icon-check-circle.svg');\\n  background-size: cover;\\n  background-position: center;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .prompt-wrapper[_ngcontent-%COMP%]   .prompt[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 16px;\\n  letter-spacing: 0.3px;\\n  color: #717575;\\n  font-weight: 400;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .prompt-wrapper[_ngcontent-%COMP%]   .prompt[_ngcontent-%COMP%]   .item.active[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%] {\\n  background: url('icon-check-circle-active.svg');\\n  background-size: cover;\\n  background-position: center;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .prompt-wrapper[_ngcontent-%COMP%]   .prompt[_ngcontent-%COMP%]   .item.active[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  color: #131414;\\n}\\n.wrapper[_ngcontent-%COMP%]   .errors[_ngcontent-%COMP%] {\\n  width: 100%;\\n  position: absolute;\\n  bottom: -18px;\\n}\\n.wrapper[_ngcontent-%COMP%]   .errors[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 16px;\\n  letter-spacing: 0.3px;\\n  color: #ed4b34;\\n}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}