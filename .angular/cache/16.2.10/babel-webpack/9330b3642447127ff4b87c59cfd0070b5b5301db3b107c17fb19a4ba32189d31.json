{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule, NG_VALIDATORS, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"inputOptions\", \"\"];\nfunction TextareaComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"span\");\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"textarea\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"placeholder\", ctx_r0.inputOptions.placeholder);\n  }\n}\nconst _c1 = [\"*\"];\nexport class TextareaComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n  }\n  ngOnInit() {\n    this.subscription = new Subscription();\n    this.form = this.fb.group({\n      text: ['', this.inputOptions.validators]\n    });\n  }\n  writeValue(val) {\n    val && this.form && this.form.setValue({\n      text: val\n    }, {\n      emitEvent: false\n    });\n  }\n  registerOnChange(fn) {\n    this.subscription?.add(this.form?.controls['text'].valueChanges.subscribe(fn));\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate() {\n    return this.form?.controls['text'].errors;\n  }\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n  static #_ = this.ɵfac = function TextareaComponent_Factory(t) {\n    return new (t || TextareaComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TextareaComponent,\n    selectors: [[\"app-textarea\", \"inputOptions\", \"\"]],\n    inputs: {\n      inputOptions: \"inputOptions\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: TextareaComponent,\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: TextareaComponent,\n      multi: true\n    }]), i0.ɵɵStandaloneFeature],\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"wrapper\", 3, \"formGroup\", 4, \"ngIf\"], [1, \"wrapper\", 3, \"formGroup\"], [\"formControlName\", \"text\", 3, \"placeholder\"]],\n    template: function TextareaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, TextareaComponent_div_0_Template, 4, 2, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.form);\n      }\n    },\n    dependencies: [CommonModule, i2.NgIf, FormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".wrapper[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  display: grid;\\n  grid: auto 1fr/auto;\\n  gap: 8px;\\n}\\n.wrapper[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 20px;\\n  letter-spacing: 0.3px;\\n  color: #717575;\\n}\\n.wrapper[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%] {\\n  resize: none;\\n  outline: none;\\n  border-radius: 10px;\\n  border: 1px solid #ced1d1;\\n  background: #ffffff;\\n  padding: 7px 15px;\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 24px;\\n  letter-spacing: 0.2px;\\n  color: #131414;\\n}\\n.wrapper[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]::placeholder {\\n  color: #939696;\\n}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}