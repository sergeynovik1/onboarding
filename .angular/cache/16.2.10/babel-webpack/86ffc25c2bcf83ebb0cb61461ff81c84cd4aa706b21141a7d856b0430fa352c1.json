{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule, NG_VALIDATORS, NG_VALUE_ACCESSOR, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { PhoneNumberValidator } from '../../consts/validators/phone-number.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/icon\";\nconst _c0 = function (a0, a1) {\n  return {\n    disabled: a0,\n    error: a1\n  };\n};\nfunction PhoneInputComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"span\");\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3);\n    i0.ɵɵelement(5, \"img\", 4);\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"arrow_drop_down\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function PhoneInputComponent_div_0_Template_div_click_8_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const _r1 = i0.ɵɵreference(12);\n      return i0.ɵɵresetView(_r1.select());\n    });\n    i0.ɵɵelementStart(9, \"div\", 6);\n    i0.ɵɵtext(10, \"+1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 7, 8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r0.phoneForm.controls[\"phone\"].disabled, ctx_r0.phoneForm.controls[\"phone\"].touched && ctx_r0.phoneForm.controls[\"phone\"].dirty && !!ctx_r0.phoneForm.controls[\"phone\"].errors));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.phoneForm);\n  }\n}\nconst _c1 = [\"*\"];\nexport class PhoneInputComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.subscription = new Subscription();\n    this.phoneForm = this.fb.group({\n      phone: ['', [Validators.required, Validators.minLength(10), PhoneNumberValidator('US')]]\n    });\n  }\n  writeValue(val) {\n    val && this.phoneForm && this.phoneForm.setValue({\n      phone: val\n    }, {\n      emitEvent: false\n    });\n  }\n  registerOnChange(fn) {\n    this.subscription.add(this.phoneForm?.controls['phone'].valueChanges.subscribe(fn));\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate() {\n    return this.phoneForm?.controls['phone'].errors;\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function PhoneInputComponent_Factory(t) {\n    return new (t || PhoneInputComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PhoneInputComponent,\n    selectors: [[\"app-phone-input\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([provideNgxMask(), {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: PhoneInputComponent,\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: PhoneInputComponent,\n      multi: true\n    }]), i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"wrapper\", 4, \"ngIf\"], [1, \"wrapper\"], [1, \"input-wrapper\", 3, \"ngClass\"], [1, \"country\"], [\"src\", \"./../../../../../assets/icons/icon-usa.svg\"], [1, \"input\", 3, \"formGroup\", \"click\"], [1, \"region-code\"], [\"type\", \"tel\", \"mask\", \"(000) 000-0000\", \"placeholder\", \"(xxx) xxx-xxxx\", \"formControlName\", \"phone\"], [\"input\", \"\"]],\n    template: function PhoneInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, PhoneInputComponent_div_0_Template, 13, 5, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.phoneForm);\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgIf, MatIconModule, i3.MatIcon, NgxMaskDirective, ReactiveFormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, FormsModule],\n    styles: [\".wrapper[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n}\\n.wrapper[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  font-family: \\\"GeneralSansVariable\\\";\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 20px;\\n  letter-spacing: 0.3px;\\n  color: #717575;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n  border: 1px solid #ced1d1;\\n  display: grid;\\n  grid: 48px/68px 1fr;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .country[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  border-right: 1px solid #ced1d1;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 4px;\\n  cursor: pointer;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%] {\\n  padding: 13px 20px;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  cursor: text;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]   .region-code[_ngcontent-%COMP%] {\\n  color: #131414;\\n  font-size: 16px;\\n  font-weight: 400;\\n  line-height: 20px;\\n  letter-spacing: 0.2px;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border: 0;\\n  outline: 0;\\n  font-size: 16px;\\n  font-weight: 400;\\n  line-height: 20px;\\n  letter-spacing: 0.2px;\\n  color: #131414;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder {\\n  color: #939696;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]:focus-within {\\n  box-shadow: 0px 0px 0px 3px #caedc9;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]:not(:focus-within).error {\\n  border: 1px solid #ed4b34;\\n}\\n.wrapper[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]:not(.error):hover {\\n  border: 1px solid #717575;\\n}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}