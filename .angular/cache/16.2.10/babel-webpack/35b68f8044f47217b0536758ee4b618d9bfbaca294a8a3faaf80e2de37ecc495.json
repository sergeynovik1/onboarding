{"ast":null,"code":"import { catchError, finalize } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/loader.service\";\nexport class LoaderInterceptor {\n  constructor(loaderService) {\n    this.loaderService = loaderService;\n  }\n  intercept(request, next) {\n    this.loaderService.setLoadingState(true);\n    return next.handle(request).pipe(finalize(() => this.loaderService.setLoadingState(false)), catchError(err => {\n      this.loaderService.setLoadingState(false);\n      throw err;\n    }));\n  }\n  static #_ = this.ɵfac = function LoaderInterceptor_Factory(t) {\n    return new (t || LoaderInterceptor)(i0.ɵɵinject(i1.LoaderService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoaderInterceptor,\n    factory: LoaderInterceptor.ɵfac\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}