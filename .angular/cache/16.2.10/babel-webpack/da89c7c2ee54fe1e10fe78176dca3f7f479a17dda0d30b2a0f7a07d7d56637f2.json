{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport { forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgToggleModule } from 'ng-toggle-button';\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-toggle-button\";\nfunction ToogleComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 1);\n    i0.ɵɵelement(1, \"ng-toggle\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.toogleForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r0.config.color)(\"switchColor\", ctx_r0.config.switchColor)(\"disabled\", ctx_r0.config.disabled)(\"value\", ctx_r0.config.value);\n  }\n}\nexport class ToogleComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.disabled = false;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.toogleForm = this.fb.group({\n      toogle: []\n    });\n    this.config = {\n      value: this.toogleForm.controls['toogle'].value,\n      disabled: this.disabled,\n      color: {\n        checked: '#92D590',\n        unchecked: '#CED1D1',\n        disabled: this.toogleForm.controls['toogle'].value ? '#CAEDC9' : '#EAEDED'\n      },\n      switchColor: {\n        checked: '#fff',\n        unchecked: '#fff',\n        disabled: '#fff'\n      }\n    };\n  }\n  writeValue(val) {\n    val && this.toogleForm && this.toogleForm.setValue({\n      toogle: val\n    }, {\n      emitEvent: false\n    });\n    this.config && (this.config.value = val);\n  }\n  registerOnChange(fn) {\n    this.subscription.add(this.toogleForm?.controls['toogle'].valueChanges.subscribe(fn));\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function ToogleComponent_Factory(t) {\n    return new (t || ToogleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToogleComponent,\n    selectors: [[\"app-toogle\"]],\n    inputs: {\n      disabled: \"disabled\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToogleComponent),\n      multi: true\n    }]), i0.ɵɵStandaloneFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [\"formControlName\", \"toogle\", 3, \"color\", \"switchColor\", \"disabled\", \"value\"]],\n    template: function ToogleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ToogleComponent_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.config && ctx.toogleForm);\n      }\n    },\n    dependencies: [CommonModule, i2.NgIf, NgToggleModule, i3.NgToggleComponent, FormsModule, i1.NgControlStatus, i1.NgControlStatusGroup, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"[_nghost-%COMP%] {\\n  width: 40px;\\n  height: 20px;\\n}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}